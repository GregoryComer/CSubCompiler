<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{07CD5AC8-8407-41A0-B377-D835E726BF7F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CSubCompiler</RootNamespace>
    <AssemblyName>CSubCompiler</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AST\BinaryOperators\AmpersandBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\AmpersandEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ArithmeticBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\BinaryOperatorNodeFactory.cs" />
    <Compile Include="AST\BinaryOperators\BitwiseBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\BooleanBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\CaretBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\CaretEqualBinaryOperaratorNode.cs" />
    <Compile Include="AST\BinaryOperators\DivideBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\DivideEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\MinusBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\MinusEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ModBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ModEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\PipeBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\PipeEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\PlusBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\PlusEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\PointerSupportedArithmeticBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\BinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ShiftLeftBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ShiftLeftEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ShiftRightBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\ShiftRightEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\StarBinaryOperatorNode.cs" />
    <Compile Include="AST\BinaryOperators\StarEqualBinaryOperatorNode.cs" />
    <Compile Include="AST\CastNode.cs" />
    <Compile Include="AST\ExpressionStatementNode.cs" />
    <Compile Include="AST\FunctionDeclarationNode.cs" />
    <Compile Include="AST\FunctionDefinitionNode.cs" />
    <Compile Include="AST\FunctionParameterNode.cs" />
    <Compile Include="AST\ITypeDefinitionNode.cs" />
    <Compile Include="AST\StructDefinitionNode.cs" />
    <Compile Include="AST\TopLevelNode.cs" />
    <Compile Include="AST\TypedefNode.cs" />
    <Compile Include="AST\UnaryPostOperators\DoubleMinusUnaryPostOperatorNode.cs" />
    <Compile Include="AST\UnaryPostOperators\DoublePlusUnaryPostOperatorNode.cs" />
    <Compile Include="AST\UnaryPostOperators\UnaryPostOperatorNode.cs" />
    <Compile Include="AST\UnaryPostOperators\UnaryPostOperatorNodeFactory.cs" />
    <Compile Include="AST\UnaryPreOperators\AmpersandUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\DoubleMinusUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\DoublePlusUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\ExclamationUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\MinusUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\StarUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\TildeUnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\UnaryPreOperatorNode.cs" />
    <Compile Include="AST\UnaryPreOperators\UnaryPreOperatorNodeFactory.cs" />
    <Compile Include="AST\VariableDeclarationNode.cs" />
    <Compile Include="AST\BinaryOperators\BinaryOperatorNodeOld.cs" />
    <Compile Include="AST\BlockNode.cs" />
    <Compile Include="AST\BreakNode.cs" />
    <Compile Include="AST\CharLiteralNode.cs" />
    <Compile Include="AST\ContinueNode.cs" />
    <Compile Include="AST\ExpressionNode.cs" />
    <Compile Include="AST\FloatLiteralNode.cs" />
    <Compile Include="AST\ForNode.cs" />
    <Compile Include="AST\FunctionCallNode.cs" />
    <Compile Include="AST\IdentifierNode.cs" />
    <Compile Include="AST\IfNode.cs" />
    <Compile Include="AST\IntLiteralNode.cs" />
    <Compile Include="AST\SubExpressionNode.cs" />
    <Compile Include="AST\LiteralNode.cs" />
    <Compile Include="AST\Node.cs" />
    <Compile Include="AST\OperatorNode.cs" />
    <Compile Include="AST\StatementNode.cs" />
    <Compile Include="AST\StringLiteralNode.cs" />
    <Compile Include="AST\TypeReferenceNode.cs" />
    <Compile Include="AST\UnaryPostOperators\UnaryPostOperatorNodeOld.cs" />
    <Compile Include="AST\UnaryPreOperators\UnaryPreOperatorNodeOld.cs" />
    <Compile Include="AST\VariableNode.cs" />
    <Compile Include="AST\WhileNode.cs" />
    <Compile Include="IL\Arithmetic.cs" />
    <Compile Include="IL\Bitwise.cs" />
    <Compile Include="IL\Branching.cs" />
    <Compile Include="IL\IILFloatInstruction.cs" />
    <Compile Include="IL\IILGeneralInstruction.cs" />
    <Compile Include="IL\IILInstruction.cs" />
    <Compile Include="IL\ILAddressingReference.cs" />
    <Compile Include="IL\ILGenerationContext.cs" />
    <Compile Include="IL\ILOutputStream.cs" />
    <Compile Include="IL\ILScope.cs" />
    <Compile Include="IL\ILType.cs" />
    <Compile Include="IL\ILVariable.cs" />
    <Compile Include="IL\ScopeStack.cs" />
    <Compile Include="IL\StackBasics.cs" />
    <Compile Include="IL\Misc.cs" />
    <Compile Include="InternalCompilerException.cs" />
    <Compile Include="Language\Keywords.cs" />
    <Compile Include="Language\Operators.cs" />
    <Compile Include="Language\Types.cs" />
    <Compile Include="Lexer.cs" />
    <Compile Include="LexerException.cs" />
    <Compile Include="Parser.cs" />
    <Compile Include="ParserException.cs" />
    <Compile Include="Preprocessor.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Token.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>